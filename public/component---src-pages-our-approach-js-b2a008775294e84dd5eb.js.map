{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/closeSvg.js","webpack://gatsby-starter-default/./src/components/hamburgerSvg.js","webpack://gatsby-starter-default/./src/components/navBar.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/pages/our-approach.js"],"names":["props","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","NavBar","siteTitle","pageName","getClassNames","linkName","classNames","push","join","useState","screenWidth","setScreenWidth","mobileNavOpen","setMobileNavOpen","pageTitles","useEffect","window","innerWidth","addEventListener","removeEventListener","navBarClassNames","mobileLinkStyle","display","padding","className","Link","to","onClick","style","paddingBottom","defaultProps","showNav","children","data","useStaticQuery","site","siteMetadata","title","marginTop"],"mappings":"2LAuBA,MArBA,SAAkBA,GAChB,OACE,qCACAC,MAAO,GACPC,OAAQ,GACRC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BACFL,GAEJ,wBACEM,EAAE,6BACFC,OAAO,QACPC,YAAa,EACbC,cAAc,QACdC,eAAe,YCMrB,MArBA,SAAmBV,GACjB,OACE,qCACEC,MAAO,GACPC,OAAQ,GACRC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BACFL,GAEJ,wBACEM,EAAE,0BACFC,OAAO,OACPC,YAAa,IACbC,cAAc,QACdC,eAAe,YCVjBC,EAAS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACrBC,EAAgB,SAACC,GACrB,IAAIC,EAAa,CAAC,WAElB,OADID,IAAaF,GAAUG,EAAWC,KAAK,YACpCD,EAAWE,KAAK,MAGzB,GAAsCC,cAAS,MAAxCC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,eAAS,GAA5CG,EAAP,KAAsBC,EAAtB,KAEMC,EACS,YADTA,EAEyB,4BAFzBA,EAGY,gBAGlBC,gBAAU,WAOV,OANEJ,EAAeK,OAAOC,YAEtBD,OAAOE,iBAAiB,UAAU,WAChCP,EAAeK,OAAOC,eAGnB,WACLD,OAAOG,oBAAoB,UAAU,kBAEpC,IAEH,IAAIC,EAAmB,CAAC,0BACpBV,EAAc,KAAKU,EAAiBb,KAAK,UAC7C,IAAMc,EAAkB,CAAEC,QAAS,QAASC,QAAS,aAErD,OACE,0BACEC,UAAU,UACV,uBAAKA,UAAWJ,EAAiBZ,KAAK,MACpC,0BACE,gBAAC,EAAAiB,KAAD,CAAMC,GAAG,IAAIF,UAAU,QACpBtB,IAGJQ,EAAc,IACb,uBAAKc,UAAU,iBACb,gBAAC,EAAAC,KAAD,CAAMC,GAAG,aAAaF,UAAWpB,EAAc,cAC5CU,GAEH,gBAAC,EAAAW,KAAD,CAAMC,GAAG,6BAA6BF,UAAWpB,EAAc,8BAC9DU,GAED,gBAAC,EAAAW,KAAD,CAAMC,GAAG,gBAAgBF,UAAWpB,EAAc,iBAC/CU,IAGL,2BACE,0BAAQU,UAAU,mBAAmBG,QAAU,WAAQd,GAAkBD,KACtEA,EAAgB,gBAAC,EAAD,MAAe,gBAAC,EAAD,SAIvCA,GACC,uBAAKgB,MAAO,CAAEC,cAAe,KAC3B,gBAAC,EAAAJ,KAAD,CAAMG,MAAOP,EAAiBK,GAAG,aAAaF,UAAWpB,EAAc,cACpEU,GAEH,gBAAC,EAAAW,KAAD,CAAMG,MAAOP,EAAiBK,GAAG,6BAA6BF,UAAWpB,EAAc,8BACtFU,GAED,gBAAC,EAAAW,KAAD,CAAMG,MAAOP,EAAiBK,GAAG,gBAAgBF,UAAWpB,EAAc,iBACvEU,MAYbb,EAAO6B,aAAe,CACpB5B,UAAU,IAGZ,QCnDA,EA1Be,SAAC,GAA4C,IAAD,MAAzC6B,eAAyC,SAAzBC,EAAyB,EAAzBA,SAAU7B,EAAe,EAAfA,SACpC8B,GAAOC,oBAAe,cAU5B,OACE,gCACGH,GACC,gBAAC,EAAD,CAAQ5B,SAAUA,EAAUD,WAAW,UAAA+B,EAAKE,KAAKC,oBAAV,eAAwBC,QAAxB,UACzC,2BACE,wBAAMT,MAAO,CAAEU,UAAWP,EAAU,IAAM,IAAKC,O,iECXvD,UAhBoB,kBAClB,gBAAC,IAAD,CAAQ7B,SAAU,gBAChB,uBAAKqB,UAAU,eACb,sBAAIA,UAAU,SAAd,gBACA,uBAAKA,UAAU,iBAIf,uBAAKA,UAAU,gBACb","file":"component---src-pages-our-approach-js-b2a008775294e84dd5eb.js","sourcesContent":["import * as React from \"react\"\n\nfunction CloseSvg(props) {\n  return (\n    <svg\n    width={16}\n    height={16}\n    viewBox=\"0 0 45 46\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M1.5 2l42 42M43.5 2l-42 42\"\n      stroke=\"white\"\n      strokeWidth={4}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n  )\n}\n\nexport default CloseSvg\n","import * as React from \"react\"\n\nfunction Hamburger(props) {\n  return (\n    <svg\n      width={24}\n      height={24}\n      viewBox=\"0 0 30 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M1 1h28M1 12h28M1 23h28\"\n        stroke=\"#fff\"\n        strokeWidth={1.5}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default Hamburger\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React, { useState, useEffect } from \"react\"\nimport \"./navBar.scss\"\nimport CloseSvg from './closeSvg'\nimport Hamburger from \"./hamburgerSvg\"\n\nconst NavBar = ({ siteTitle, pageName }) => {\n  const getClassNames = (linkName) => {\n    let classNames = ['navLink']\n    if (linkName === pageName) classNames.push('selected')\n    return classNames.join(' ')\n  }\n\n  const [screenWidth, setScreenWidth] = useState(null)\n  const [mobileNavOpen, setMobileNavOpen] = useState(false)\n\n  const pageTitles = {\n    'home-tour': 'home tour',\n    'defining-adaptable-design': 'what is adaptable design?',\n    'our-approach': 'our approach'\n  }\n\n  useEffect(() => {\n    setScreenWidth(window.innerWidth)\n    \n    window.addEventListener('resize', () => {\n      setScreenWidth(window.innerWidth)\n    })\n\n  return () => {\n    window.removeEventListener('resize', () => {})\n  }\n  }, [])\n\n  let navBarClassNames = ['navBarContentContainer']\n  if (screenWidth < 760) navBarClassNames.push('mobile')\n  const mobileLinkStyle = { display: 'block', padding: '12px 16px' }\n\n  return (\n    <header\n      className=\"navBar\">\n      <div className={navBarClassNames.join(' ')}>\n        <h2>\n          <Link to=\"/\" className=\"link\">\n            {siteTitle}\n          </Link>\n        </h2>\n        {screenWidth > 760 ? \n          <div className=\"navBarButtons\">\n            <Link to=\"/home-tour\" className={getClassNames('home-tour')}>\n              {pageTitles['home-tour']}\n            </Link>\n            <Link to=\"/defining-adaptable-design\" className={getClassNames('defining-adaptable-design')}>\n            {pageTitles['defining-adaptable-design']}\n            </Link>\n            <Link to=\"/our-approach\" className={getClassNames('our-approach')}>\n              {pageTitles['our-approach']}\n            </Link>\n          </div> : \n          <div>\n            <button className=\"mobileNavControl\" onClick={ () => { setMobileNavOpen(!mobileNavOpen) }}>\n              {mobileNavOpen ? <CloseSvg /> : <Hamburger /> }\n            </button>\n          </div>}\n      </div>\n      {mobileNavOpen &&\n        <div style={{ paddingBottom: 16 }}>\n          <Link style={mobileLinkStyle} to=\"/home-tour\" className={getClassNames('home-tour')}>\n            {pageTitles['home-tour']}\n          </Link>\n          <Link style={mobileLinkStyle} to=\"/defining-adaptable-design\" className={getClassNames('defining-adaptable-design')}>\n          {pageTitles['defining-adaptable-design']}\n          </Link>\n          <Link style={mobileLinkStyle} to=\"/our-approach\" className={getClassNames('our-approach')}>\n            {pageTitles['our-approach']}\n          </Link>\n        </div>}\n    </header>\n  )\n}\n\nNavBar.propTypes = {\n  siteTitle: PropTypes.string,\n  pageName: PropTypes.string\n}\n\nNavBar.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default NavBar\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport \"./layout.scss\"\nimport NavBar from \"./navBar\"\n\nconst Layout = ({ showNav = true, children, pageName }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      {showNav && \n        <NavBar pageName={pageName} siteTitle={data.site.siteMetadata?.title || `Title`} />}\n      <div>\n        <main style={{ marginTop: showNav ? 100 : 0}}>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\n\nconst OurApproach = () => (\n  <Layout pageName={'our-approach'}>\n    <div className=\"page-layout\">\n      <h1 className=\"title\">our approach</h1>\n      <div className=\"text-wrapper\">\n        \n      </div>\n      \n      <div className=\"text-wrapper\">\n        <p>\n       </p>\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default OurApproach\n"],"sourceRoot":""}